#include <iostream>
#include <vector>
#include <string>
#include <limits>

using namespace std;

const int BOARD_SIZE = 3;
const char EMPTY_CELL = ' ';
const char PLAYER_X = 'X';
const char PLAYER_O = 'O';

vector<vector<char>> board(BOARD_SIZE, vector<char>(BOARD_SIZE, EMPTY_CELL));
char currentPlayer = PLAYER_X;

void displayBoard() {
    cout << "\n";
    cout << "  1   2   3\n";
    cout << "1 " << board[0][0] << " | " << board[0][1] << " | " << board[0][2] << "\n";
    cout << "  ---------\n";
    cout << "2 " << board[1][0] << " | " << board[1][1] << " | " << board[1][2] << "\n";
    cout << "  ---------\n";
    cout << "3 " << board[2][0] << " | " << board[2][1] << " | " << board[2][2] << "\n";
    cout << "\n";
}

bool checkWin(char player) {
    for (int i = 0; i < BOARD_SIZE; ++i) {
        if (board[i][0] == player && board[i][1] == player && board[i][2] == player)
            return true;
        if (board[0][i] == player && board[1][i] == player && board[2][i] == player)
            return true;
    }
    if (board[0][0] == player && board[1][1] == player && board[2][2] == player)
        return true;
    if (board[0][2] == player && board[1][1] == player && board[2][0] == player)
        return true;
    return false;
}

bool checkDraw() {
    for (int i = 0; i < BOARD_SIZE; ++i) {
        for (int j = 0; j < BOARD_SIZE; ++j) {
            if (board[i][j] == EMPTY_CELL)
                return false;
        }
    }
    return true;
}

void switchPlayer() {
    currentPlayer = (currentPlayer == PLAYER_X) ? PLAYER_O : PLAYER_X;
}

void move() {
    int row, col;
    cout << "Player " << currentPlayer << "'s turn. Enter row (1-3) and column (1-3) separated by space: ";
    cin >> row >> col;
    --row;
    --col;

    if (row >= 0 && row < BOARD_SIZE && col >= 0 && col < BOARD_SIZE && board[row][col] == EMPTY_CELL) {
        board[row][col] = currentPlayer;
    } else {
        cout << "Invalid move! Try again.\n";
        cin.clear();
        cin.ignore(numeric_limits<streamsize>::max(), '\n');
        move();
    }
}

void resetGame() {
    board = vector<vector<char>>(BOARD_SIZE, vector<char>(BOARD_SIZE, EMPTY_CELL));
    currentPlayer = PLAYER_X;
}

int main() {
    char playAgain = 'y';

    while (playAgain == 'y' || playAgain == 'Y') {
        displayBoard();

        while (true) {
            move();
            displayBoard();

            if (checkWin(currentPlayer)) {
                cout << "Player " << currentPlayer << " wins!\n";
                break;
            }

            if (checkDraw()) {
                cout << "It's a draw!\n";
                break;
            }

            switchPlayer();
        }

        cout << "Play again? (y/n): ";
        cin >> playAgain;
        cin.clear();
        cin.ignore(numeric_limits<streamsize>::max(), '\n');

        if (playAgain == 'y' || playAgain == 'Y') {
            resetGame();
        }
    }

    cout << "Thanks for playing!\n";
    return 0;
}
